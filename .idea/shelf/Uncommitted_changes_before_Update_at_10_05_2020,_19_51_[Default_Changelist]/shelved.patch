Index: SecondWayComputing.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import math\npoisk=1\nflag=2\nv=1\nkn=0.05\nmc=1\nr2l=1\nmm=1\nu1=1\nmmm=1\nuu0=1\nek=1\nfb=1\nl1=1\nl3=1\ndi=1\nc0=1\nlm=1.2 * pow(10,-7) #Lm_у СОБСТВ. ИНДУКТИВНОСТЬ УСТАНОВКИ\nlmc=lm*c0\nC0=254* pow(10,-6)#Co_у ЕМКОСТЬ КОНДЕНСАТОРОВ УСТАНОВКИ\np3=7.1*pow(10,-8)#RO_з УДЕЛ. Э/СОПРОТИВЛЕНИЕ ЗАГОТОВКИ,\nmod_upr=68*pow(10,9)#E_з МОДУЛЬ УПРУГОСТИ ЗАГОТОВКИ,\npm=2640 # Pm_з ПЛОТНОСТЬ ЗАГОТОВКИ, ( кг/м3)\nl0=0.030 # lo_з ДЛИНА ЗАГОТОВКИ, м\ndh=0.1514 # Dн_з НАРУЖНЫЙ ДИАМЕТР ЗАГОТОВКИ, м\nh0=0.0012 # Ho_з ТОЛЩИНА СТЕНКИ ЗАГОТОВКИ, м\np1=1,78*pow(10,-8) #RO_и УДЕЛ. Э/СОПРОТИВЛЕНИЕ ИНДУКТОРА, (Ом*м)\na=0.004\nb=0.008\nhb=0.005\nlv=0.150\ndv=0.153 #Dи_в ВНУТРЕННИЙ ДИАМЕТР ИНДУКТОРА , м\nn1=7 #N1_и ЧИСЛО ВИТКОВ ИНДУКТОРА\nl1=0.036 #l1_и ДЛИНА (ВЫСОТА) ИНДУКТОРА, м\nR0=24*pow(10,6)#Ro_у СОПРОТИВЛЕНИЕ УСТАНОВКИ, Ом\ndn=0.169#Dн_и НАРУЖНЫЙ ДИАМЕТР ИНДУКТОРА , м\nsp=700*pow(10,6)#SP_з ПРЕДЕЛ ТЕКУЧЕСТИ ЗАГОТОВКИ, Н/м2\nh1=0.004 # Hи_1 ВЫСОТА ВИТКА ИНДУКТОРА (ПО ДЛИНЕ), м\ney=700 *pow(10,6)#e'_з МОДУЛЬ УПРОЧНЕНИЯ ЗАГОТОВКИ, Н/м2\neps=3#eo_з КОНЕЧНАЯ ОТНОСИТЕЛЬНАЯ ДЕФОРМАЦИЯ ЗАГОТОВКИ - \uD835\uDC52\uD835\uDF11\uD835\uDC58\nH_izol=0.0009#Hизол_и - ТОЛЩИНА ИЗОЛЯЦИИ МЕЖДУ ВИТКАМИ, м\nU0=7000#Uo_у НАЧАЛЬНОЕ НАПРЯЖЕНИЕ УСТАНОВКИ, В\nkappa=1\nmu0=1.0\nf0 = 0.5 / (3.14 * math.pow((1 / lmc - r2l), 0.5))\nover_f0 = 0.5 / (3.14 * math.pow(lmc, 0.5))\nfz = p3 / (3.14 * mu0 * h0 * h0)  # минимальная рабочая частота разряда, Гц\n# {для недопущения эффекта \"магнитной подушки\"}\nw3 = math.pow(mod_upr / pm, 0.5) * 2 / dh\nf3 = w3 / 2 / 3.14  # { собственная частота }\n    #     { колебаний заготовки, Гц }\n    # _____________________________________________________________________________________________________________________________\n    #     { dh-НАРУЖНЫЙ ДИАМЕТР ЗАГОТОВКИ }\ndb = dh - 2 * h0  # { db-ВНУТРЕННИЙ ДИАМЕТР ЗАГОТОВКИ\n\ndef Prikids(y,ek,u1):\n        ZOLOTO = (pow(5, 0.5)-1)/2\n        def1 = y\n        defold = def1\n        if def1 < ek: def1 = defold + ZOLOTO*abs(defold-ek)\n        else: def1 = ek + (1-ZOLOTO)*abs(defold-ek)\n        drob = (def1 + ek) / ek/2\n        if defold-ek > 0:\n            if drob < 1:\n             uu0 = u1 * drob\n            else: uu0 = u1 / drob\n        else:\n            if drob < 1: uu0 = u1 / drob\n            else: uu0 = u1 * drob\n        if (defold/ek) < 0.01:\n            uu0 = 2 * u1 / drob\n        print(\"Предлагаемое значение [кВ] Uo = \"+str(uu0)+\" кВ\")\n\nif v == 1:  # раздача }\n    ly = l0 / db\n\nelse:  # { ОБЖИМ }\n    ly = l1 / dv\n    if kn < 0.1:\n        if poisk==1:\n            print(\"L/D = \", ly)\n            if ly < 1:\n                kn = 3.783890521981891 * ly - 7.795224937947945 * ly * ly + 4.714887625113096 * math.pow(ly,\n                                                                                                      3) + 6.984777813396215 * math.pow(\n                ly, 4) - 13.53957485592525 * math.pow(ly, 5) + 9.187983184383594 * math.pow(ly,\n                                                                                        6) - 3.048218155556006 * math.pow(\n                ly, 7) + 0.4929535896014099 * math.pow(ly, 8) - 3.094887626324646E-2 * math.pow(ly, 9)\n            else:\n                if ly < 2:\n                    kn = 0.69026 + 0.06 * ly\n                else:\n                    kn = 0.7669266667 + 0.021666667 * ly\nif poisk==1:\n    print(\" Фактор поля , Кн = \",kn)\n    if fz < (f0/2):\n        fp = 0.5 * f0\n    if abs(fz - f0) < f0 / 2:\n        fp = 0.8 * f0\n    if fz > 1.5 * f0:\n        print(\" ОБРАБОТКА НА МИУ НЕЦЕЛЕСООБРАЗНА \")  # вместо данной команды необходимо выдать окно с данной надписью и вернуться в ввод данных\n#<<<<<<< HEAD\nif poisk==1 or mm==0:\n    print(' КОНТРОЛЬ ПАРАМЕТРОВ [ 1 - ДА ], [ 0 - НЕТ ] ? ')  # необходимо вывести окно с данным вопросом\n    kp1=input()\nelse:\n    kp1 = 0\nif poisk==1 and mm > 0:\n    U0 = u1\n    u1 = u1 * 1000\n    U0 = u1\nif poisk==0 and mmm > 0:\n    U0 = uu0\n\n# {1} Repeat {начало}\n    wq = fp * 2.0 * 3.14\n    if w3 > wq * 3: ef = 0.5 * ek\n    else:\n        if w3 < wq / 3:\n            ef = 0\n        else: ef = 0.25 * ek\n#=======\n    if poisk==1 or mm==0:\n        print(' КОНТРОЛЬ ПАРАМЕТРОВ [ 1 - ДА ], [ 0 - НЕТ ] ? ')  # необходимо вывести окно с данным вопросом\n        kp1=input()\n    else:kp1 = 0\n    if poisk==1 and mm > 0:\n            U0 = u1\n            u1 = u1 * 1000\n            U0 = u1\n    if poisk==0 and mmm > 0:U0 = uu0\n\n#___________________________________________________________________________________________________________________\n    else:  # РАЗДАЧА\n# { ОБЖИМ }\n        vg = 1 * (-1)\n        if l0 / dh < 1:\n            l3 = l0 / math.pow((1 - ef), 0.5)\n            h3 = h0 / math.sqrt(1 - ef)\n        else:\n            l3 = l0\n            h3 = h0 / (1 - ef)\n        dz = dh * (1 - ef)  # { СРЕДНИЙ НАРУЖНЫЙ ДИАМЕТР ЗАГОТОВКИ }\n        dm = dz - 2.0 * h3  # { СРЕДНИЙ ВНУТРЕННИЙ ДИАМЕТР ЗАГОТОВКИ }\n        wr = (dv - dh) / 2.0\n    x3 = pow((p3 / (3.14 * mu0 * fp)), 0.5)\n    x1 = pow((p1 / (mu0 * 3.14 * fp)), 0.5)\n    if x1 < 2 * a / 3:\n        xb = x1\n    else:\n        xb = 2 * a / 3\n        z = b / (hb + xb)  # {hb - ЗАЗОР МЕЖДУ ТОКОПОДВОДАМИ }\n        lb = (0.5 * l1 * math.log((2.0 * l1) / (a + b) + 0.5) + (\n                math.log((hb + xb) / (b + xb)) + (z * z - 1) * math.log(1 + z * z) / (2.0 * z * z) + (\n                    2.0 / z * math.atan(z))) * lv) * pow(10,-7)\n        rb = p1 * (l1 + 2.0 * lv) / (a * b)\n        xi = 0\n#======================================================================================================================\n    if v == 0:\n# begin { ОБЖИМ }\n        if 0.5 * x1 < h1 / 3.0:\n            xi = 0.5 * x1\n        else:\n            xi = h1 / 3.0\n        di = dv + 2.0 * xi\n    else:  # обжим\n        di = dn - h1  # { РАЗДАЧА }\n\n# { индуктор средний }\n    if l1 / di < 1.0 and l1 / di > 0.3:\n        Lind = di * di / l1 * (4.1 + 3.9 * (l1 / di - 0.3)) * n1 * n1 * pow(10,-7)\n    else:\n        if l1 / di > 1:  # then { индуктор длинный }\n            Lind = di * di / l1 * (9.9 - (3.2 * di) / l1) * n1 * n1 * pow(10,-7)\n        else:  # { индуктор короткий }\n            Lind = di * di / l1 * (4.1 + 3.9 * (l1 / di - 0.3)) * n1 * n1 * pow(10,-7)\n        if x1 <= h1:\n            xr = x1\n        else:\n            xr = h1\n        if 3 <= h3 / 3.0:\n            xz = x3 / 2.0\n        else:\n            xz = h3 / 3.0\n        if v == 1:\n            dr = dm + 2.0 * xz  # { РАЗДАЧА }\n# { dr - РАСЧЕТНЫЙ ДИАМЕТР ЗАГОТОВКИ}\n        else:\n            dr = dz - 2.0 * xz  # { ОБЖИМ }\n        if l3 / dr < 1.0 and l3 / dr > 0.3:\n            vb = 1\n            q0 = 2.0 / math.pow(3.0, 0.5)\n    # { заготовка средняя }\n            Lzag = dr * dr / l3 * (4.1 + 3.9 * (l3 / dr - 0.3)) * pow(10,-7)\n        else:  # { begin else }\n            vb = 0\n            q0 = 1\n        if l3 / dr > 1.0:  # then { заготовка длинная }\n            Lzag = dr * dr / l3 * (9.9 - 3.2 * dr / l3) * pow(10,-7)\n        else:\n            print(\"... Обработка на МИУ нецелесообразна...\")  # вместо данной команды необходимо выдать окно с данной надписью и вернуться в ввод данных\n\n        vb = 1\n        q0 = 2.0 / math.pow(3.0, 0.5)\n\n        Lzag = dr * dr / l3 * (4.1 + 3.9 * (l3 / dr - 0.3)) * pow(10,-7)\n\n#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    if x3 < h3:\n        xs = x3\n    else:\n        xs = h3\n    Rzag = p3 * 3.14 * dr / (l3 * xs)  # { Rzag - АКТИВНОЕ СОПРОТИВЛЕНИЕ ЗАГОТОВКИ }\n    hm = (l1 - H_izol * (n1 - 1)) * 1000 / n1  # { hm - ВЫСОТА ВИТКА ИНДУКТОРА }\n#========================================================================================================================\n    if hm < 0:\n# begin\n        print(\"кУ-кУ !! кУ-кУ !! кУ-кУ !!\") #Требуется вывести окно\n        print(\" ВЫСОТА ВИТКА ИНДУКТОРА < 0 !!\")\n# Delay(3000) Задержка\n# end\n    Rind = p1 * 3.14 * di * n1 * n1 / l1 / xr  # { Rind - АКТИВНОЕ СОПРОТИВЛЕНИЕ ИНДУКТОРА }\n    if l1 / di > 1.0:\n        Lind = di * di / l1 * (9.9 - 3.2 * di / l1) * n1 * n1 * pow(10,-7)\n    else:\n        Lind = di * di / l1 * (4.1 + 3.9 * (l1 / di - 0.3)) * n1 * n1 * pow(10,-7)\n\nif v == 1:\n    if l1 / di < 1.0:\n        fb = 4.8\n    else:\n        fb = 5.0\n        m9 = fb * pow((1 + (l1 + l3) * (l1 + l3)) / (di*di), 0.5) - 4.5 * pow(((1 + (l1 - l3) * (l1 - l3) / di / di), 0.5) * (n1 * pow(10,-7)))\n        m8 = (dr * dr * di) / (l1 * l3)\n        M_ind_zag = m9 * m8\n\nif v == 2:\n    if l3 / dr < 1:\n        fb = 4.8\n    else:\n        fb = 5.0\n        m9 = fb * pow(1 + (l1 + l3) * (l1 + l3) / dr*dr,0.5)-4.5*pow((1 + (l1 - l3) * (l1 - l3) / (dr*dr),0.5)*n1*pow(10,-7))\n        m8 = dr * di * di / (l3 * l1)\n        M_ind_zag = m8 * m9\n\n#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    kq = M_ind_zag / Lzag\n    qq = 2.0 * 3.14 * fp * Lzag / Rzag\n    k2 = qq / math.pow((1 + qq * qq), 0.5)\n    lnn = Lzag * kq * kq * k2 * k2\n    rn = Rzag * kq * kq * k2 * k2\n    lo = Lind - lnn\n    ro = Rind + rn\n    ls = lm + lb + lo\n    rs = R0 + rb + ro\n    s1 = rs / (2.0 * ls)\n    ww = pow((abs(1.0 / (c0 * ls) - s1 * s1)), 0.5)\n    c9 = (1.0 / (c0 * ls) - s1 * s1)\n    if c9 < 0 and flag > 1:\n        print(\"Ку ку разряд апериодический\")  # then\n #_______________________________________________________________________________\n    if c9 < 0:\n        ww = 1\n        q1 = ww / s1\n    q3 = ww * (Lzag / Rzag)\n    if c9 < 0:\n        f1 = 0\n    else:\n        f1 = math.atan(q1 / (q1 * q3 - q3 / q1 - 1.0))\n    s3 = ww / q3\n    k3 = 1  # {sqrt((1+1/q1/q1)/(1-(1/q1-1/q3)*(1/q1-1/q3)))}\n    E0 = 0.5 * c0 * U0 * U0\n#_____________________________________________________________________________________________________________________\n    if (v == 0):  # then { ОБЖИМ }\n        pw = mu0 * E0 * (n1 * kn / l3) * (n1 * kn / l3) / ls\n    else:\n    # { РАЗДАЧА }\n        pw = (mu0 * E0 * kq * kq * kn * kn) / (ls * l3 * l3)\n        pq = pw * math.exp(0 - 3.14 / (2.0 * q1))\n    if c9 < 0:  # then\n        fq = 10\n    else:\n        fq=ww/(2.0 * 3.14)\n        # Repeat{3}\n        print(' Для продолжения ===> Жми на <Enter> >>')\n        \"\"\"q0q = Ord(klav)\n        gotoxy(1, 1)\n    Until\n    {3}(q0q=13)\n    end\n    {end if (kp1 ==1)}\"\"\"\n    abt = abs(fp - fq)\n    if (abt > 1):\n        fp = fq\n        flag = flag + 1\n    while (abt < 1):\n        io = 1  # { МИОМ(Э) , c. 79 }\n        lw = lm + lb\n        alfa1 = Lind / lw\n        alfa3 = Lzag * n1 * n1 / lw\n        m13 = M_ind_zag * n1 / lw\n        Gamma0 = R0 * math.pow((c0 / lw), 0.5)\n        Gamma1 = Rind * math.pow((c0 / lw), 0.5)\n        Gamma3 = Rzag * n1 * n1 * math.pow((c0 / lw), 0.5)\n        ka = 4 * ey * lw * c0 / pm / dh / dh\n        dd = 4 * sp * lw * c0 / pm / dh / dh\n        bb = mu0 * (c0 * U0 * n1 * kn) * (c0 * U0 * n1 * kn) / (pm * dh * h0 * l0 * l0)\n        b1 = mu0 * c0 / 2.0 / lw * n1 * U0 * kn / l3 * n1 * U0 * kn / l3\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SecondWayComputing.py	(revision 6e7c36d7866207da5b694f1d44c4a0eb2ecad570)
+++ SecondWayComputing.py	(date 1589130272911)
@@ -129,7 +129,7 @@
             U0 = u1
     if poisk==0 and mmm > 0:U0 = uu0
 
-#___________________________________________________________________________________________________________________
+#______________________1_____________________________________________________________________________________________
     else:  # РАЗДАЧА
 # { ОБЖИМ }
         vg = 1 * (-1)
